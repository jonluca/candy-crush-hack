package gui;

import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;

import javax.swing.Box;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingConstants;
import javax.swing.filechooser.FileNameExtensionFilter;

import logic.hexLogic;

public class CCHack extends JFrame {

    private static final long serialVersionUID = 1L;
    private JLabel selectLabel, infoLabel;
    private JButton selectButton, helpButton;
    private JFileChooser file;
    private File selectedFile;
    private JFrame ourFrame;

    public CCHack() {
	super("Candy Crush Save Game Hack");
	initializeComponents();
	createMenu();
	createGUI();
    }

    public static void main(String[] args) {
	CCHack cchack = new CCHack();
	cchack.setVisible(true);
    }

    private void createMenu() {
	// Where the GUI is created:
	JMenuBar menuBar;
	JMenu menu;
	JMenuItem about, help;

	// Create the menu bar.
	menuBar = new JMenuBar();

	// Build the first menu.
	menu = new JMenu("Help");
	menu.getAccessibleContext().setAccessibleDescription("Help");
	menuBar.add(menu);

	// a group of JMenuItems
	about = new JMenuItem("About");
	about.getAccessibleContext().setAccessibleDescription("Help");
	menu.add(about);

    }

    private void initializeComponents() {

	ourFrame = this;

	setSize(800, 200);
	setResizable(false);
	getContentPane().setBackground(Color.white);
	setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	setLayout(new FlowLayout());
	setLocationRelativeTo(null);

	selectLabel = new JLabel("Please select your save_##########.dat");
	infoLabel = new JLabel("Welcome to Candy Crush Saga Hacks!");
	selectButton = new JButton("Choose File");
	helpButton = new JButton("Help");

	selectButton.addActionListener(new ActionListener() {
	    public void actionPerformed(ActionEvent ae) {
		file = new JFileChooser("Choose File");
		String userhome = System.getProperty("user.home");
		file.setCurrentDirectory(new File(userhome + System.getProperty("file.separator") + "Desktop"));
		FileNameExtensionFilter filter = new FileNameExtensionFilter(".dat files", "dat");
		file.setFileFilter(filter);
		file.setAcceptAllFileFilterUsed(false);
		int returnValue = file.showOpenDialog(null);
		if (returnValue == JFileChooser.APPROVE_OPTION) {
		    selectedFile = file.getSelectedFile();
		    try {
			hexLogic logic = new hexLogic(selectedFile, (CCHack) ourFrame);
			setVisible(false);
		    } catch (IOException e) {
			// TODO Auto-generated catch block
			JOptionPane.showMessageDialog(ourFrame,
				"Unable to save backup! Check if your file + .bak already exists. If it does, delete it and try again.",
				"Backup Save Error", JOptionPane.ERROR_MESSAGE);
			setVisible(true);
		    }
		}
	    }
	});

    }

    private void createGUI() {
	// Info label top
	infoLabel.setAlignmentX(CENTER_ALIGNMENT);
	infoLabel.setHorizontalAlignment(SwingConstants.CENTER);
	infoLabel.setFont(Constants.topFont);
	JPanel top = new JPanel();
	top.setBackground(Color.WHITE);
	top.setSize(800, 150);
	top.add(infoLabel);

	add(top);

	//
	add(selectLabel);

	add(Box.createVerticalGlue());
	// Bottom buttons
	AppearanceSettings.setSize(350, 50, selectButton, helpButton);
	JPanel bottom = new JPanel();
	bottom.setLayout(new GridLayout(1, 2));
	bottom.setBackground(Color.white);
	bottom.setSize(800, 50);
	bottom.add(selectButton);
	bottom.add(helpButton);

	add(bottom);

    }

}
